x+#----second most freq char---
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        char[] cr = s.toCharArray();
        Map<Character,Integer> hm = new HashMap<>();
       for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            hm.put(c,hm.getOrDefault(c,0)+1);
        }
        char firmost='0';
        char secmost='0';
        int seccount=0,maxcount=0;
        for(Map.Entry<Character,Integer> i : hm.entrySet())
        {
            char c = i.getKey();
            int count=i.getValue();
            if(count>maxcount)
            {
                secmost = firmost;
                seccount = maxcount;
                firmost=c;
                maxcount=count;
            }
            else if(count>seccount)
            {
                secmost = c;
                seccount=count;
            }
        }
        if(seccount>1)
        System.out.println("Second most frequent character is "+secmost);
        else
        System.out.println("No Second most frequent character");
        
    }
}

import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        Map<Character, Integer> hm = new HashMap<>();
        
        // Count the frequency of each character
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            hm.put(c, hm.getOrDefault(c, 0) + 1);
        }
        
        // Print the map
        System.out.print(hm);
        
        int[] a = new int[hm.size()];
        int k = 0;
        for (char key : hm.keySet()){
            int v = hm.get(key);
            a[k++] = v;
        }
        
        Arrays.sort(a);
        int y = a.length;
        
        if (y<=1) {
            System.out.print("No Second most frequent character");
            System.exit(0);
        } 
        int b = a[y-2];
            char foundKey = 'r';
            for (Map.Entry<Character, Integer> entry : hm.entrySet()) {
                if (entry.getValue().equals(b)) {
                    foundKey = entry.getKey();
                    break;
                }
            }
            System.out.print("Second most frequent character is " + foundKey);
    }
}


#----MxM matrix in NxN matrix-----
import java.util.*;
public class main{
    public static void main(String lkj[]){
        Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int[][] arr = new int[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        int m =sc.nextInt();
        int[][] brr = new int[m][m];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<m;j++)
            {
                brr[i][j]=sc.nextInt();
            }
        }
        boolean found = false;
        if(m<=n)
        {
            for(int i=0;i<=n-m;i++)
            {
                for(int j=0;j<=n-m;j++)
                {
                    boolean match = true;
                    for(int k=0;k<m;k++)
                    {
                        for(int l=0;l<m;l++)
                        {
                            if(arr[i+k][j+l]!=brr[k][l])
                            {
                                match=false;
                                break;
                            }
                        } 
                        if(!match)
                        break;
                    }
                    if(match)
                    {
                        found=true;
                        break;
                    }
                }
                if(found)
                break;
            }
        }
        System.out.println(found ? "True" : "False");
    }
}

#----similarity----
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int c=0;
        for(int i=0;i<n;i++)
        {
            c=0;
            String s = sc.next();
            for(int k=0;k<s.length();k++)
            {
                String str = s.substring(k);
                for(int j=0;j<str.length();j++)
                {
                    if(s.charAt(j)==str.charAt(j))
                    {
                        c++;
                    }
                    else
                    {
                        break;
                    }
                }
            }
            System.out.println(c);
        }
    }
}

#-----License Plate----
import java.util.*;
public class main{
    public static void main(String ljn[]){
        Scanner sc = new Scanner(System.in);
        String a = sc.nextLine();
        String s = sc.nextLine();
        String[] r = s.split(" ");
        List<Character> al = new ArrayList<>();
        for(int i=0;i<a.length();i++)
        {
            if((a.charAt(i)>='a' && a.charAt(i)<='z') || a.charAt(i)>='A' && a.charAt(i)<='Z')
            {
                char c = Character.toLowerCase(a.charAt(i));
                al.add(c);
            }
        }
        int count=0;
        for(int i=0;i<r.length;i++)
        {
            count=0;
            String s1 = r[i];
            for(int j=0;j<s1.length();j++)
            {
                if(al.contains(s1.charAt(j)))
                {
                count++;
                }
            }
            if(count==al.size())
            {
                if(r[i].length()>r[i+1].length())
                continue;
                else
                {
                System.out.println(s1);
                break;
                }
            }
        }
    }
}

#------hard program-----

import java.util.*;
public class Main{
    public static void main(String args[])
    {
        Scanner sc= new Scanner(System.in);
        int t=sc.nextInt();
        
        for(int k=0;k<t;k++)
        {
            int n = sc.nextInt();
            int[] arr = new int[n];
         
            for(int j=0;j<n;j++)
            {
                   arr[j] = sc.nextInt();
            }
            ArrayList<Integer> al = new ArrayList<>() ;
            ArrayList<Integer> al2 = new ArrayList<>() ;
            for(int j=0;j<n;j++)
            {
                  al.add(arr[j]);
            }
            
            
            int max;
            max= Collections.max(al);
         
            int sum=arr[n-1]*1+max;
            int kl=2;
                for(int i=0;i<n-1;i++ )
                {
                    sum = sum+(arr[i]*kl+max);
                    kl++;
                }
                System.out.println(sum);
                
        }
    }
}


#-------sum the elements check odd or even------
import java.util.*;
public class main{
    public static void main(String khoegf[]){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        int k=sc.nextInt();
        List<String> al = new ArrayList<>();
        String x = "";
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)>='a' && s.charAt(i)<='z')
            {
                x+=s.charAt(i);
                if(s.charAt(i+1)==',' || s.charAt(i+1)=='\'' || i==s.length()-1)
                {
                    al.add(x);
                    x="";
                }
            }
        }
        int[] arr = new int[al.size()];
        int l=0;
        int mul=1;
        for(int i=0;i<al.size();i++)
        {
            String r = al.get(i);
            for(int j=0;j<r.length();j++)
            {
                int c = (int)r.charAt(j);
                mul*=(int)Math.pow(c,k);
            }
            arr[l++]=mul;
            mul=1;
        }
        int sum=0;
        for(int i=0;i<arr.length;i++)
        {
            sum+=arr[i];
        }
        if(sum%2==0)
        System.out.println("EVEN");
        else
        System.out.println("ODD");
    }
}


#-------int b,a=10;char i='a';-----
import java.util.*;
public class Main{
    public static void main(String lkh[])
    {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String[] r = s.split(";");
        // List<Integ>
        ArrayList<String> al = new ArrayList<>();
        int count = 0;
        int count1 = 0;
        for(int i=0;i<r.length;i++)
        {
            if(r[i].matches("int.*"))
            {
                if(count==0)
                {
                    
                al.add("Integers");
                count++;
                }
                String ss = r[i].substring(4);
                String[] rr = ss.split(",");
                for(int k=0;k<rr.length;k++)
                {
                   if(rr[k].length()==1)
                   {
                       al.add(rr[k]+"=junk");
                   }
                   else
                   {
                       al.add(rr[k]);
                   }
                }
                
              
            }
            else if(r[i].matches("char.*"))
            {
                if(count1==0)
                {
                    
                al.add("Characters");
                count1++;
                }
                String ss = r[i].substring(5);
                String[] rr = ss.split(",");
                for(int k=0;k<rr.length;k++)
                {
                   if(rr[k].length()==1)
                   {
                       al.add(rr[k]+"=junk");
                   }
                   else
                   {
                       al.add(rr[k]);
                   }
                }
                
              
            }
        }
        al.forEach(System.out::println);
    }
}

#----No of moves----
import java.util.*;
public class main{
    public static void main(String lkh[])
    {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        int t=0;
        for(int i:arr)
        {
            t+=i;
        }
        int tar=t/n;
        int m=0;
        for(int i:arr)
        {
            if(i>tar)
            {
                m+=i-tar;
            }
        }
        System.out.println("No of moves = "+m);
    }
}

#----substring of identical letters ex: abc=1c1b1a or aaaaaaaaaa=10a=aa-----
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        String s = sc.next();
        Map<Character,Integer> hm = new HashMap<>();
        for(int i=0;i<s.length();i++)
        {
            hm.put(s.charAt(i),hm.getOrDefault(s.charAt(i),0)+1);
        }
        if(hm.size()==1)
        {
            for(Map.Entry<Character,Integer> i:hm.entrySet())
            {
                String h = Integer.toHexString(i.getValue());
                String r = h+i.getKey();
                System.out.println(r);
            }
        }
        else
        {
            List<Character> al = new ArrayList<>(hm.keySet());
            Collections.reverse(al);
            StringBuilder sb = new StringBuilder();
            for(Character i:al)
            {
                if(i<10 && i>16)
                {
                    sb.append(hm.get(i)).append(i);
                }
                else
                {
                    String h = Integer.toHexString(hm.get(i));
                    String r = h+i;
                    sb.append(r);
                }
            }
            System.out.print(sb.toString());
        }
    }
}

#---spiral----
import java.util.Scanner;

public class MatrixRotation {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int M = scanner.nextInt();
        int N = scanner.nextInt();
        int R = scanner.nextInt();

        int[][] matrix = new int[M][N];
        for (int i = 0; i < M; i++) {
            for (int j = 0; j < N; j++) {
                matrix[i][j] = scanner.nextInt();
            }
        }

        rotateMatrixAntiClockwise(M, N, R, matrix);

        for (int i = 0; i < M; i++) {
            for (int j = 0; j < N; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }

        scanner.close();
    }

    private static void rotateMatrixAntiClockwise(int M, int N, int R, int[][] matrix) {
        int numLayers = Math.min(M, N) / 2;

        for (int layer = 0; layer < numLayers; layer++) {
            int[] extractedLayer = extractLayer(matrix, layer, M, N);
            int[] rotatedLayer = rotateLayer(extractedLayer, R);
            placeLayer(matrix, layer, M, N, rotatedLayer);
        }
    }

    private static int[] extractLayer(int[][] matrix, int layer, int M, int N) {
        int top = layer;
        int bottom = M - layer - 1;
        int left = layer;
        int right = N - layer - 1;

        int layerSize = 2 * (bottom - top + right - left);
        int[] extractedLayer = new int[layerSize];
        int index = 0;

        for (int j = left; j <= right; j++) {
            extractedLayer[index++] = matrix[top][j];
        }
        for (int i = top + 1; i <= bottom; i++) {
            extractedLayer[index++] = matrix[i][right];
        }
        for (int j = right - 1; j >= left; j--) {
            extractedLayer[index++] = matrix[bottom][j];
        }
        for (int i = bottom - 1; i > top; i--) {
            extractedLayer[index++] = matrix[i][left];
        }

        return extractedLayer;
    }

    private static int[] rotateLayer(int[] layer, int R) {
        int len = layer.length;
        int rotations = R % len;
        int[] rotatedLayer = new int[len];

        for (int i = 0; i < len; i++) {
            rotatedLayer[i] = layer[(i + rotations) % len];
        }

        return rotatedLayer;
    }

    private static void placeLayer(int[][] matrix, int layer, int M, int N, int[] rotatedLayer) {
        int top = layer;
        int bottom = M - layer - 1;
        int left = layer;
        int right = N - layer - 1;

        int index = 0;

        for (int j = left; j <= right; j++) {
            matrix[top][j] = rotatedLayer[index++];
        }
        for (int i = top + 1; i <= bottom; i++) {
            matrix[i][right] = rotatedLayer[index++];
        }
        for (int j = right - 1; j >= left; j--) {
            matrix[bottom][j] = rotatedLayer[index++];
        }
        for (int i = bottom - 1; i > top; i--) {
            matrix[i][left] = rotatedLayer[index++];
        }
    }
}

#-----reverse spiral----
import java.util.*;
public class main{
    public static void main(String lknj[]){
        Scanner sc = new Scanner(System.in);
        int n1=sc.nextInt();
        int n2=sc.nextInt();
        int[][] arr = new int[n1][n2];
        for(int i=0;i<n1;i++)
        {
            for(int j=0;j<n2;j++)
            {
                arr[i][j]=sc.nextInt();
            }
        }
        int rowstart=0,rowend=arr.length-1;
        int colstart=0,colend=arr[0].length-1;
        while(rowstart<=rowend && colstart<=colend)
        {
            for(int i=rowstart;i<=rowend;i++)
            {
                System.out.print(arr[i][colstart]+" ");
            }
            colstart++;
            for(int j=colstart;j<=colend;j++)
            {
                System.out.print(arr[rowend][j]+" ");
            }
            rowend--;
            if(colstart<=colend)
            {
                for(int i=rowend;i>=rowstart;i--)
                {
                    System.out.print(arr[i][colend]+" ");
                }
                colend--;
            }
            if(rowstart<=rowend)
            {
                for(int j=colend;j>=colstart;j--)
                {
                    System.out.print(arr[rowstart][j]+" ");

                }
                rowstart++;
            }
        }
    }
}

+#------Telephone----
import java.util.*;
public class main{
    public static void main(String lkhg[]){
        String[] alpha = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        Scanner sc = new Scanner(System.in);
        String n = sc.next();
        StringBuilder sb = new StringBuilder();
        
        
        int first = Character.getNumericValue(n.charAt(0));
        if(first==0 || first==1)
        {
            System.out.println("No Combination of Strings");
        }
        else if((first==2 || first==3 || first==4 || first==5 || first==6 || first==7 || first==8 || first==9) && n.length()==1)
        {
            for(int i=0;i<alpha[first].length();i++)
            {
                System.out.print(alpha[first].charAt(i)+" ");
            }
        }
        else
        {
            for(int i=0;i<alpha[first].length();i++)
            {
                char c = alpha[first].charAt(i);
                for(int k=1;k<n.length();k++)
                {
                    int l = Character.getNumericValue(n.charAt(k));
                    for(int j=0;j<alpha[l].length();j++)
                    {
                        sb.append(c);
                        sb.append(alpha[l].charAt(j));
                        sb.append(" ");
                    }
                }
            }
            System.out.println(sb.toString());
        }
    }
}

#------first+second==target---
import java.util.*;
public class main{
    public static void main(String lkh[]){
        Scanner sc = new Scanner(System.in);
        String s1 = sc.next();
        String s2 = sc.next();
        String s3 = sc.next();
        
        StringBuilder sb = new StringBuilder();
        for(char i:s1.toCharArray())
        {
            sb.append(i-'a');
        }
        int r1=Integer.parseInt(sb.toString());
        sb.setLength(0);
        for(char i:s2.toCharArray())
        {
            sb.append(i-'a');
        }
        int r2=Integer.parseInt(sb.toString());
        sb.setLength(0);
        for(char i:s3.toCharArray())
        {
            sb.append(i-'a');
        }
        int r3=Integer.parseInt(sb.toString());
        sb.setLength(0);
        
        if((r1+r2)==r3)
        System.out.println("true");
        else
        System.out.println("false");
        
    }
}

#----PATTERN lvl4--
import java.util.*;
public class Main{
	public static void main(String ljhghf[])
	{
		Scanner sc = new Scanner(System.in);
		int n =sc.nextInt();
        int k=1;
		List<Integer> al = new ArrayList<>();
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<=i;j++)
			{
                if(j==0)
                al.add(k);
                System.out.print((k++)+" ");
                }
            System.out.println();
		}
        Collections.reverse(al);
		for(int i=0;i<n;i++)
		{
            int l=al.get(i);
			for(int j=n-i;j>0;j--)
			{
				System.out.print((l++)+" ");
			}
			System.out.println();
		}
	}
}

#-----pattern X middle 0---
import java.util.*;
public class main{
    public static void main(String lkh[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i==0 || i==n-1 || j==0 || j==n-1)
                {
                    System.out.print("X ");
                }
                else
                {
                    System.out.print("0 ");
                }
            }
            System.out.println();
        }
    }
}

#-----Big Pattern--
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=n-1;j>=i;j--)
            {
                System.out.print(" ");
            }
            for(int j=0;j<i;j++)
            {
                System.out.print("*");
            }
            System.out.print(" ");
            char c = (char)('A' + i -1);
            for(int j=0;j<i;j++)
            {
                System.out.print(c++);
            }
            System.out.println();
        }
        int k=n;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<i;j++)
            {
                System.out.print(" ");
            }
            for(int j=n-i;j>0;j--)
            {
                System.out.print((k--));
            }
            k=n;
            System.out.print(" ");
            int l = 1+2*i;
            for(int j=n-i;j>0;j--)
            {
                System.out.print((l));
                l+=2;
            }
            
            System.out.println();
        }
    }
}


#------replace the '?' with letters---
import java.util.*;
public class main{
    public static void main(String lj[]){
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        char[] arr = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
        List<Character> al = new ArrayList<>();
        for(char i:s.toCharArray())
        {
            al.add(i);
        }
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='?')
            al.set(i,arr[i]);
        }
        if(s.length()<arr.length)
        {
            System.out.println("-1");
        }
        else
        {
        for(char i:al)
        System.out.print(i);
        }
    }
}

#-----Proper perfect number---
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int k=0;k<n;k++)
        {
            int a = sc.nextInt();
            List<Integer> al = new ArrayList<>();
            for(int i=1;i<=a/2;i++)
            {
                if(a%i==0)
                al.add(i);
            }
            int sum=0;
            for(int i:al)
            {
                sum+=i;
            }
            if(a==sum)
            System.out.println("YES");
            else
            System.out.println("NO");
        }
    }
}

#-----Switch case program---
import java.util.*;
public class main{
    public static void main(String lgwf[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i=0;i<n;i++)
        {
            String s = sc.next();
            for(char j:s.toCharArray())
            {
                switch(j)
                {
                    case 'a':
                    case 'b':
                    case 'c':
                        System.out.print("2");
                        break;
                    case 'd':
                    case 'e':
                    case 'f':
                        System.out.print("3");
                        break;
                    case 'g':
                    case 'h':
                    case 'i':
                        System.out.print("4");
                        break;
                    case 'j':
                    case 'k':
                    case 'l':
                        System.out.print("5");
                        break;
                    case 'm':
                    case 'n':
                    case 'o':
                        System.out.print("6");
                        break;
                    case 'p':
                    case 'q':
                    case 'r':
                    case 's':
                        System.out.print("7");
                        break;
                    case 't':
                    case 'u':
                    case 'v':
                        System.out.print("8");
                        break;
                    case 'w':
                    case 'x':
                    case 'y':
                    case 'z':
                        System.out.print("9");
                        break;
                }
            }
            System.out.println();
        }
    }
}

#-----Closest sum----
import java.util.*;
public class main{
    public static void main(String lkh[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        int k = sc.nextInt();
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        Arrays.sort(arr);
        int sum=0;
        int close = Integer.MAX_VALUE;
        int res=0;
        for(int i=0;i<arr.length-2;i++)
        {
            int left = i+1;
            int right = arr.length-1;
            while(left<right)
            {
            sum=arr[i]+arr[left]+arr[right];
            if(Math.abs(sum-k) < Math.abs(k-close))
            {
                res=sum;
            }
            if(sum<k)
            {
                left++;
            }
            else if(sum>k)
            {
                right--;
            }
            else
            {
                System.out.println(res);
                return;
            }
            }
        }
    }
}

#------Fibanocci last term----
import java.util.*;
public class Main
{
  public static void main(String[] args)
  {
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int firstTerm = 0, secondTerm = 1;
    int sum=0;
    for (int i = 0; i <= n; ++i)
    {
      sum=firstTerm;
      int nextTerm = firstTerm + secondTerm;
      firstTerm = secondTerm;
      secondTerm = nextTerm;
    }
    int lastdigit=sum%100;
    if(lastdigit<9)
    {
        System.out.print("0"+lastdigit);
    }
    else
    {
        System.out.print(lastdigit);
    }
  }
}


#----exit---
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        sc.nextLine();
        for(int i=0;i<t;i++)
        {
            String s = sc.nextLine();
            String ap = s.substring(s.length()-2);
            String time = s.substring(0,s.length()-2);
            String[] r = time.split(":");
            int hour = Integer.parseInt(r[0]);
            String min = r[1];
            String sec = r[2];
            if(ap.matches("PM") && hour!=12)
            {
                hour+=12;
            }
            else if(ap.matches("AM") && hour==12)
            {
                hour=0;                
            }
            System.out.println(hour+":"+min+":"+sec);
        }
    }
}	


#---exit---
import java.util.*;
public class main{
    public static void main(String lkjh[]){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        int[] res = new int[arr.length];
        res[n-1] = -1;
        int max = arr[n-1];
        for(int i=n-2;i>=0;i--)
        {
            int temp = arr[i];
            
            res[i] = max;
            if(temp>max)
            max=temp;
        }
        System.out.println("The modified array:");
        for(int i:res)
        {
            System.out.print(i+" ");
        }
    }
}

import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0;i<n;i++){
            arr[i] = sc.nextInt();
        }
        int max=0,max1=0,sum=0;
        if(n<=2) System.out.println("-1");
        else
        {
        for(int i=0;i<n;i++)
        {
            if(i==0)
            {
                sum = arr[i+1] + arr[n-1];
            }
            else if(i==n-1)
            {
                sum = arr[i-1] + arr[0];
            }
            else
            {
                sum = arr[i-1] + arr[i+1];
            }
            if(max<sum)
            {
                max = sum;
                max1 = arr[i];
                }
            sum=0;
        }
        System.out.println(max1);
        }
    }
}

#----palindrome length in a string----
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		Map<Character,Integer> hm = new LinkedHashMap<>();
		for(char i:s.toCharArray())
		{
		    hm.put(i,hm.getOrDefault(i,0)+1);
		}
		int c=0;
		boolean flag = false;
		for(Map.Entry<Character,Integer> i : hm.entrySet())
		{
		    if(i.getValue()%2==0)  c+=i.getValue();
		    else 
		    {
		        c+=(i.getValue()-1);
		        flag = true;
		    }
		}
		if(flag) c+=1;
		
		System.out.println(c);
	}
}


#---sliding window------
 int start=0,end=0,n=nums.length;
        int min=Integer.MAX_VALUE;
        int sum=0;
        while(end<n)
        {
            sum+=nums[end];
            while(sum>=target)
            {
                int len=end-start+1;
                min=Math.min(len,min);
                sum-=nums[start];
                start++;
            }
            end+=1;
        }
        return (min==Integer.MAX_VALUE) ? 0 : min;